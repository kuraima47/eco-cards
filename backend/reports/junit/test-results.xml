<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Mocha Tests" time="0.072" tests="59" failures="0">
  <testsuite name="Root Suite" timestamp="2025-03-21T16:44:00" tests="0" time="0.000" failures="0">
  </testsuite>
  <testsuite name="Card Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/cards.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllCards" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/cards.test.js" time="0.006" failures="0">
    <testcase name="Card Service getAllCards should return all cards" time="0.003" classname="should return all cards">
    </testcase>
    <testcase name="Card Service getAllCards should handle database errors when getting all cards" time="0.001" classname="should handle database errors when getting all cards">
    </testcase>
  </testsuite>
  <testsuite name="getCardById" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/cards.test.js" time="0.002" failures="0">
    <testcase name="Card Service getCardById should return a specific card by id" time="0.001" classname="should return a specific card by id">
    </testcase>
    <testcase name="Card Service getCardById should return null when card not found" time="0.000" classname="should return null when card not found">
    </testcase>
  </testsuite>
  <testsuite name="updateCard" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/cards.test.js" time="0.002" failures="0">
    <testcase name="Card Service updateCard should update a card successfully" time="0.001" classname="should update a card successfully">
    </testcase>
    <testcase name="Card Service updateCard should return null when card not found for update" time="0.000" classname="should return null when card not found for update">
    </testcase>
  </testsuite>
  <testsuite name="deleteCard" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/cards.test.js" time="0.003" failures="0">
    <testcase name="Card Service deleteCard should delete a card successfully" time="0.002" classname="should delete a card successfully">
    </testcase>
    <testcase name="Card Service deleteCard should return false when card not found for deletion" time="0.001" classname="should return false when card not found for deletion">
    </testcase>
  </testsuite>
  <testsuite name="Category Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/category.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllCategories" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/category.test.js" time="0.002" failures="0">
    <testcase name="Category Service getAllCategories should return all categories" time="0.001" classname="should return all categories">
    </testcase>
    <testcase name="Category Service getAllCategories should handle database errors when getting all categories" time="0.001" classname="should handle database errors when getting all categories">
    </testcase>
  </testsuite>
  <testsuite name="getCategoryById" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/category.test.js" time="0.002" failures="0">
    <testcase name="Category Service getCategoryById should return a specific category by id" time="0.001" classname="should return a specific category by id">
    </testcase>
    <testcase name="Category Service getCategoryById should return null when category not found" time="0.001" classname="should return null when category not found">
    </testcase>
  </testsuite>
  <testsuite name="getCategoriesByDeckId" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/category.test.js" time="0.002" failures="0">
    <testcase name="Category Service getCategoriesByDeckId should return all categories for a specific deck" time="0.001" classname="should return all categories for a specific deck">
    </testcase>
  </testsuite>
  <testsuite name="createCategory" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/category.test.js" time="0.008" failures="0">
    <testcase name="Category Service createCategory should create a new category successfully" time="0.001" classname="should create a new category successfully">
    </testcase>
    <testcase name="Category Service createCategory should handle validation errors when creating a category" time="0.006" classname="should handle validation errors when creating a category">
    </testcase>
  </testsuite>
  <testsuite name="updateCategory" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/category.test.js" time="0.003" failures="0">
    <testcase name="Category Service updateCategory should update a category successfully" time="0.002" classname="should update a category successfully">
    </testcase>
    <testcase name="Category Service updateCategory should return null when category not found for update" time="0.001" classname="should return null when category not found for update">
    </testcase>
  </testsuite>
  <testsuite name="deleteCategory" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/category.test.js" time="0.002" failures="0">
    <testcase name="Category Service deleteCategory should delete a category successfully" time="0.001" classname="should delete a category successfully">
    </testcase>
    <testcase name="Category Service deleteCategory should return false when category not found for deletion" time="0.000" classname="should return false when category not found for deletion">
    </testcase>
  </testsuite>
  <testsuite name="DeckContent Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/deckContent.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllDeckContents" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/deckContent.test.js" time="0.003" failures="0">
    <testcase name="DeckContent Service getAllDeckContents should return all deck contents" time="0.000" classname="should return all deck contents">
    </testcase>
    <testcase name="DeckContent Service getAllDeckContents should handle errors when getting all deck contents" time="0.000" classname="should handle errors when getting all deck contents">
    </testcase>
  </testsuite>
  <testsuite name="getDeckContentsByDeckId" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/deckContent.test.js" time="0.000" failures="0">
    <testcase name="DeckContent Service getDeckContentsByDeckId should return deck contents for a specific deck" time="0.000" classname="should return deck contents for a specific deck">
    </testcase>
  </testsuite>
  <testsuite name="createDeckContent" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/deckContent.test.js" time="0.001" failures="0">
    <testcase name="DeckContent Service createDeckContent should create a new deck content" time="0.001" classname="should create a new deck content">
    </testcase>
  </testsuite>
  <testsuite name="deleteDeckContent" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/deckContent.test.js" time="0.001" failures="0">
    <testcase name="DeckContent Service deleteDeckContent should delete a deck content" time="0.000" classname="should delete a deck content">
    </testcase>
  </testsuite>
  <testsuite name="Deck Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/decks.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllDecks" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/decks.test.js" time="0.002" failures="0">
    <testcase name="Deck Service getAllDecks should return all decks" time="0.001" classname="should return all decks">
    </testcase>
    <testcase name="Deck Service getAllDecks should handle errors when getting all decks" time="0.001" classname="should handle errors when getting all decks">
    </testcase>
  </testsuite>
  <testsuite name="getDeckById" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/decks.test.js" time="0.001" failures="0">
    <testcase name="Deck Service getDeckById should return a specific deck" time="0.001" classname="should return a specific deck">
    </testcase>
  </testsuite>
  <testsuite name="createDeck" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/decks.test.js" time="0.001" failures="0">
    <testcase name="Deck Service createDeck should create a new deck" time="0.001" classname="should create a new deck">
    </testcase>
    <testcase name="Deck Service createDeck should validate required fields" time="0.000" classname="should validate required fields">
    </testcase>
  </testsuite>
  <testsuite name="updateDeck" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/decks.test.js" time="0.002" failures="0">
    <testcase name="Deck Service updateDeck should update a deck" time="0.000" classname="should update a deck">
    </testcase>
  </testsuite>
  <testsuite name="deleteDeck" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/decks.test.js" time="0.001" failures="0">
    <testcase name="Deck Service deleteDeck should delete a deck" time="0.000" classname="should delete a deck">
    </testcase>
  </testsuite>
  <testsuite name="GroupAcceptedCard Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupAcceptedCards.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllGroupAcceptedCards" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupAcceptedCards.test.js" time="0.002" failures="0">
    <testcase name="GroupAcceptedCard Service getAllGroupAcceptedCards should return all group accepted cards" time="0.001" classname="should return all group accepted cards">
    </testcase>
    <testcase name="GroupAcceptedCard Service getAllGroupAcceptedCards should handle errors when getting all group accepted cards" time="0.001" classname="should handle errors when getting all group accepted cards">
    </testcase>
  </testsuite>
  <testsuite name="getGroupAcceptedCardsByGroupId" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupAcceptedCards.test.js" time="0.001" failures="0">
    <testcase name="GroupAcceptedCard Service getGroupAcceptedCardsByGroupId should return accepted cards for a specific group" time="0.001" classname="should return accepted cards for a specific group">
    </testcase>
  </testsuite>
  <testsuite name="createGroupAcceptedCard" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupAcceptedCards.test.js" time="0.001" failures="0">
    <testcase name="GroupAcceptedCard Service createGroupAcceptedCard should create a new group accepted card" time="0.001" classname="should create a new group accepted card">
    </testcase>
  </testsuite>
  <testsuite name="deleteGroupAcceptedCard" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupAcceptedCards.test.js" time="0.001" failures="0">
    <testcase name="GroupAcceptedCard Service deleteGroupAcceptedCard should delete a group accepted card" time="0.001" classname="should delete a group accepted card">
    </testcase>
  </testsuite>
  <testsuite name="GroupPlayer Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupPlayers.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllGroupPlayers" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupPlayers.test.js" time="0.002" failures="0">
    <testcase name="GroupPlayer Service getAllGroupPlayers should return all group players" time="0.001" classname="should return all group players">
    </testcase>
    <testcase name="GroupPlayer Service getAllGroupPlayers should handle errors when getting all group players" time="0.001" classname="should handle errors when getting all group players">
    </testcase>
  </testsuite>
  <testsuite name="getGroupPlayersByGroupId" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupPlayers.test.js" time="0.000" failures="0">
    <testcase name="GroupPlayer Service getGroupPlayersByGroupId should return players for a specific group" time="0.000" classname="should return players for a specific group">
    </testcase>
  </testsuite>
  <testsuite name="createGroupPlayer" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupPlayers.test.js" time="0.001" failures="0">
    <testcase name="GroupPlayer Service createGroupPlayer should create a new group player" time="0.000" classname="should create a new group player">
    </testcase>
  </testsuite>
  <testsuite name="deleteGroupPlayer" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groupPlayers.test.js" time="0.001" failures="0">
    <testcase name="GroupPlayer Service deleteGroupPlayer should delete a group player" time="0.000" classname="should delete a group player">
    </testcase>
  </testsuite>
  <testsuite name="Group Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groups.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllGroups" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groups.test.js" time="0.001" failures="0">
    <testcase name="Group Service getAllGroups should return all groups" time="0.000" classname="should return all groups">
    </testcase>
    <testcase name="Group Service getAllGroups should handle errors when getting all groups" time="0.001" classname="should handle errors when getting all groups">
    </testcase>
  </testsuite>
  <testsuite name="getGroupById" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groups.test.js" time="0.000" failures="0">
    <testcase name="Group Service getGroupById should return a specific group" time="0.000" classname="should return a specific group">
    </testcase>
  </testsuite>
  <testsuite name="createGroup" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groups.test.js" time="0.001" failures="0">
    <testcase name="Group Service createGroup should create a new group" time="0.001" classname="should create a new group">
    </testcase>
  </testsuite>
  <testsuite name="updateGroup" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groups.test.js" time="0.000" failures="0">
    <testcase name="Group Service updateGroup should update a group" time="0.000" classname="should update a group">
    </testcase>
  </testsuite>
  <testsuite name="deleteGroup" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/groups.test.js" time="0.001" failures="0">
    <testcase name="Group Service deleteGroup should delete a group" time="0.001" classname="should delete a group">
    </testcase>
  </testsuite>
  <testsuite name="Session Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/sessions.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllSessions" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/sessions.test.js" time="0.001" failures="0">
    <testcase name="Session Service getAllSessions should return all sessions" time="0.000" classname="should return all sessions">
    </testcase>
    <testcase name="Session Service getAllSessions should handle errors when getting all sessions" time="0.000" classname="should handle errors when getting all sessions">
    </testcase>
  </testsuite>
  <testsuite name="getSessionById" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/sessions.test.js" time="0.001" failures="0">
    <testcase name="Session Service getSessionById should return a specific session" time="0.001" classname="should return a specific session">
    </testcase>
  </testsuite>
  <testsuite name="createSession" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/sessions.test.js" time="0.001" failures="0">
    <testcase name="Session Service createSession should create a new session" time="0.001" classname="should create a new session">
    </testcase>
  </testsuite>
  <testsuite name="updateSession" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/sessions.test.js" time="0.000" failures="0">
    <testcase name="Session Service updateSession should update a session" time="0.000" classname="should update a session">
    </testcase>
  </testsuite>
  <testsuite name="deleteSession" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/sessions.test.js" time="0.001" failures="0">
    <testcase name="Session Service deleteSession should delete a session" time="0.001" classname="should delete a session">
    </testcase>
  </testsuite>
  <testsuite name="User Service" timestamp="2025-03-21T16:44:00" tests="0" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/users.test.js" time="0.000" failures="0">
  </testsuite>
  <testsuite name="getAllUsers" timestamp="2025-03-21T16:44:00" tests="2" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/users.test.js" time="0.001" failures="0">
    <testcase name="User Service getAllUsers should return all users" time="0.000" classname="should return all users">
    </testcase>
    <testcase name="User Service getAllUsers should handle errors when getting all users" time="0.001" classname="should handle errors when getting all users">
    </testcase>
  </testsuite>
  <testsuite name="getUserById" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/users.test.js" time="0.001" failures="0">
    <testcase name="User Service getUserById should return a specific user" time="0.001" classname="should return a specific user">
    </testcase>
  </testsuite>
  <testsuite name="createUser" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/users.test.js" time="0.000" failures="0">
    <testcase name="User Service createUser should create a new user" time="0.000" classname="should create a new user">
    </testcase>
  </testsuite>
  <testsuite name="updateUser" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/users.test.js" time="0.001" failures="0">
    <testcase name="User Service updateUser should update a user" time="0.001" classname="should update a user">
    </testcase>
  </testsuite>
  <testsuite name="deleteUser" timestamp="2025-03-21T16:44:00" tests="1" file="/mnt/c/Users/madar/Desktop/cartes-dynamique/backend/test/service/users.test.js" time="0.001" failures="0">
    <testcase name="User Service deleteUser should delete a user" time="0.000" classname="should delete a user">
    </testcase>
  </testsuite>
</testsuites>